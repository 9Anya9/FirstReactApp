{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"Hi, how are you?\",\n        likesCount: 12\n      }, {\n        id: 2,\n        message: \"Its my first post\",\n        likesCount: 11\n      }],\n      newPostText: 'hahahhaha'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Anya\"\n      }, {\n        id: 2,\n        name: \"Vova\"\n      }, {\n        id: 3,\n        name: \"Misha\"\n      }, {\n        id: 4,\n        name: \"Dima\"\n      }, {\n        id: 5,\n        name: \"Grisha\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Hi\"\n      }, {\n        id: 2,\n        message: \"HELLOO\"\n      }, {\n        id: 3,\n        message: \"MayyyyY\"\n      }, {\n        id: 4,\n        message: \"byyyyyyyyyyyeee\"\n      }, {\n        id: 5,\n        message: \"LET ME\"\n      }],\n      newMessageBody: \"\"\n    }\n  },\n\n  _callSubscriber() {\n    console.log('state changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messages.push({\n        id: 6,\n        message: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;","map":{"version":3,"sources":["/home/anna/work/react/tutorial/my-app/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"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","sourcesContent":["const ADD_POST='ADD-POST';\nconst UPDATE_NEW_POST_TEXT='UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY='UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE='SEND-MESSAGE';\n\n\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [\n        { id: 1, message: \"Hi, how are you?\", likesCount: 12 },\n        { id: 2, message: \"Its my first post\", likesCount: 11 },\n      ],\n      newPostText: 'hahahhaha'\n    },\n    dialogsPage: {\n      dialogs: [\n        { id: 1, name: \"Anya\" },\n        { id: 2, name: \"Vova\" },\n        { id: 3, name: \"Misha\" },\n        { id: 4, name: \"Dima\" },\n        { id: 5, name: \"Grisha\" },\n      ],\n      messages: [\n        { id: 1, message: \"Hi\" },\n        { id: 2, message: \"HELLOO\" },\n        { id: 3, message: \"MayyyyY\" },\n        { id: 4, message: \"byyyyyyyyyyyeee\" },\n        { id: 5, message: \"LET ME\" },\n      ],\n      newMessageBody:\"\"\n    }\n  },\n  _callSubscriber() {\n    console.log('state changed');\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      }\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = '';\n      this._callSubscriber(this._state);\n    }\n    else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n    }\n    else if(action.type === UPDATE_NEW_MESSAGE_BODY){\n      this._state.dialogsPage.newMessageBody = action.body;\n      this._callSubscriber(this._state);\n    }\n    else if(action.type === SEND_MESSAGE){\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n      this._state.dialogsPage.messages.push({id:6, message:body});\n      this._callSubscriber(this._state);\n  }\n  }\n}\n\nexport const addPostActionCreator=()=>({type:ADD_POST});\n\nexport const updateNewPostTextActionCreator=(text)=>({type:UPDATE_NEW_POST_TEXT, newText:text})\n\n\nexport const sendMessageCreator=()=>({type:SEND_MESSAGE});\n\nexport const updateNewMessageBodyCreator=(body)=>({type:UPDATE_NEW_MESSAGE_BODY, body:body})\n\nexport default store;"]},"metadata":{},"sourceType":"module"}