{"ast":null,"code":"var _jsxFileName = \"/home/anna/work/react/tutorial/my-app/src/Users/UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://mir-s3-cdn-cf.behance.net/project_modules/disp/35771931234507.564a1d2403b3a.gif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  //переадет колбеки, которая презантационная компонента может вызывать\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/home/anna/work/react/tutorial/my-app/src/Users/UsersContainer.js"],"names":["React","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\n\n\nclass UsersContainer extends React.Component {\ncomponentDidMount(){\n    this.props.toggleIsFetching(true);\n    axios\n    .get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n    .then((response) => {\n    this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n}\n     onPageChanged = (pageNumber)=> {\n       this.props.setCurrentPage(pageNumber);\n       this.props.toggleIsFetching(true);\n       axios\n    .get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n    .then((response) => {\n        this.props.toggleIsFetching(false);\n\n      this.props.setUsers(response.data.items);\n    });\n     }\n\n  render() {\n    return <> \n    {this.props.isFetching ? <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/35771931234507.564a1d2403b3a.gif\" />:null}\n    <Users totalUsersCount={this.props.totalUsersCount}\n    pageSize={this.props.pageSize}\n    currentPage={this.props.currentPage}\n    onPageChanged={this.onPageChanged}\n    users={this.props.users}\n    follow={this.props.follow}\n    unfollow={this.props.unfollow}\n    \n\n    />\n    </>\n  }}\n\nlet mapStateToProps = (state) =>{\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount:state.usersPage.totalUsersCount,\n        currentPage:state.usersPage.currentPage, \n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispatchToProps = (dispatch)=>{//переадет колбеки, которая презантационная компонента может вызывать\n    return{\n        follow: (userId)=>{\n            dispatch(followAC(userId));\n\n        },\n        unfollow: (userId)=>{\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users)=>{\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage:(pageNumber)=>{\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount:(totalCount)=>{\n            dispatch(setUsersTotalCountAC(totalCount));\n        },\n        toggleIsFetching:(isFetching)=>{\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}