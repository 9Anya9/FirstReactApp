{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst SET_TOGGLE_IS_FETCHING = 'SET-TOGGLE-IS-FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        }) // or users:[...state.users]\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        }) // or users:[...state.users]\n\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users //склеиваем новых и старых юзеров в один массив \n\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalCount\n        };\n      }\n\n    case SET_TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_COUNT,\n  totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: SET_TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/anna/work/react/tutorial/my-app/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","SET_TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","totalCount","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\nconst SET_TOGGLE_IS_FETCHING = 'SET-TOGGLE-IS-FETCHING'\n\n\nlet initialState={\n    users: [ ],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false\n}\n\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {...state, \n                users:state.users.map(u=>{\n                    if(u.id===action.userId){\n                        return {...u, followed:true}\n                    }\n                    return u;\n                })\n                // or users:[...state.users]\n            }\n        case UNFOLLOW:\n           return {...state, \n                users:state.users.map(u=>{\n                    if(u.id===action.userId){\n                        return {...u, followed:false}\n                    }\n                    return u;\n                })\n                // or users:[...state.users]\n            }\n\n        case SET_USERS:{\n        return{\n            ...state, users:action.users //склеиваем новых и старых юзеров в один массив \n        }\n        }\n        case SET_CURRENT_PAGE:{\n            return{\n                ...state, currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT:{\n            return{\n                ...state, totalUsersCount: action.totalCount\n            }\n        }\n        case SET_TOGGLE_IS_FETCHING:{\n            return{\n                ...state, isFetching: action.isFetching\n            }\n        }\n        default: \n        return state;\n    }\n}\n\nexport const follow = (userId) => ({type:FOLLOW, userId})\nexport const unfollow = (userId) => ({type:UNFOLLOW, userId})\nexport const setUsers = (users) =>({type:SET_USERS, users})\nexport const setCurrentPage = (currentPage)=>({type:SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalCount)=>({type:SET_TOTAL_COUNT, totalCount})\nexport const toggleIsFetching = (isFetching)=>({type:SET_TOGGLE_IS_FETCHING, isFetching})\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}