{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nlet initialState = {\n  users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        }) // or users:[...state.users]\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        }) // or users:[...state.users]\n\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users] //склеиваем новых и старых юзеров в один массив \n\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/anna/work/react/tutorial/my-app/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAC;AACbC,EAAAA,KAAK,EAAE;AADM,CAAjB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,MAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AACHF,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAE;AACrB,cAAGA,CAAC,CAACC,EAAF,KAAOJ,MAAM,CAACK,MAAjB,EAAwB;AACpB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAC;AAAhB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALK,CADH,CAOH;;AAPG,OAAP;;AASJ,SAAKT,QAAL;AACG,aAAO,EAAC,GAAGK,KAAJ;AACFF,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAE;AACrB,cAAGA,CAAC,CAACC,EAAF,KAAOJ,MAAM,CAACK,MAAjB,EAAwB;AACpB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAC;AAAhB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALK,CADJ,CAOF;;AAPE,OAAP;;AAUH,SAAKR,SAAL;AAAe;AACf,eAAM,EACF,GAAGI,KADD;AACQF,UAAAA,KAAK,EAAC,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGG,MAAM,CAACH,KAA3B,CADd,CACgD;;AADhD,SAAN;AAGC;;AACD;AACA,aAAOE,KAAP;AA5BJ;AA8BH,CA/BD;;AAiCA,OAAO,MAAMQ,QAAQ,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAACR,MAAN;AAAcY,EAAAA;AAAd,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAACP,QAAN;AAAgBW,EAAAA;AAAhB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIZ,KAAD,KAAW;AAACI,EAAAA,IAAI,EAACN,SAAN;AAAiBE,EAAAA;AAAjB,CAAX,CAAnB;AACP,eAAeC,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\n\nlet initialState={\n    users: [ ]\n}\n\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {...state, \n                users:state.users.map(u=>{\n                    if(u.id===action.userId){\n                        return {...u, followed:true}\n                    }\n                    return u;\n                })\n                // or users:[...state.users]\n            }\n        case UNFOLLOW:\n           return {...state, \n                users:state.users.map(u=>{\n                    if(u.id===action.userId){\n                        return {...u, followed:false}\n                    }\n                    return u;\n                })\n                // or users:[...state.users]\n            }\n\n        case SET_USERS:{\n        return{\n            ...state, users:[...state.users, ...action.users] //склеиваем новых и старых юзеров в один массив \n        }\n        }\n        default: \n        return state;\n    }\n}\n\nexport const followAC = (userId) => ({type:FOLLOW, userId})\nexport const unfollowAC = (userId) => ({type:UNFOLLOW, userId})\nexport const setUsersAC = (users) =>({type:SET_USERS, users})\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}